<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.09l99i70x1ok9q1ce2a4u160jovk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.199w4nv0sk9i9j17cmpmg1w6ne42'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='date' table='[date]' type='table' />
          <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_F9839E6102FB4A35A7D6A874E5862541]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_32FDCC8593F948A5967CBB677DD1103C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_32FDCC8593F948A5967CBB677DD1103C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_32FDCC8593F948A5967CBB677DD1103C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_14443C5BE52E40DB86C217242CB0D2B7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_14443C5BE52E40DB86C217242CB0D2B7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_14443C5BE52E40DB86C217242CB0D2B7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_14443C5BE52E40DB86C217242CB0D2B7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_14443C5BE52E40DB86C217242CB0D2B7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_45E6B848DF4042EB9F58C2BF25359FCE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_45E6B848DF4042EB9F58C2BF25359FCE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_45E6B848DF4042EB9F58C2BF25359FCE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_191FA555E5724607B0769CA8AA51D892]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_191FA555E5724607B0769CA8AA51D892]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]&quot;' value='Normalized Amt' />
          <alias key='&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:profit_margin:qk]&quot;' value='Profit' />
        </aliases>
      </column>
      <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Profit Margin %' datatype='real' name='[Calculation_1688286974790397963]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1688286974649286658])' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_32FDCC8593F948A5967CBB677DD1103C]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_14443C5BE52E40DB86C217242CB0D2B7]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_45E6B848DF4042EB9F58C2BF25359FCE]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_191FA555E5724607B0769CA8AA51D892]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_F9839E6102FB4A35A7D6A874E5862541]' role='measure' type='quantitative' />
      <column caption='Cost Price' datatype='real' name='[cost_price]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Profit Margin' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='Profit Margin Percentage' datatype='real' name='[profit_margin_percentage]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[pcto:sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
      <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Week-Trunc' name='[twk:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1688286974790397963]' derivation='User' name='[usr:Calculation_1688286974790397963:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Cy Date))' hidden='true' name='[Action (MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Cy Date))' hidden='true' name='[Action (QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEK(Cy Date))' hidden='true' name='[Action (WEEK(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[pcto:sum:Calculation_1688286974649286658:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_1688286974649286658' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_32FDCC8593F948A5967CBB677DD1103C'>
            <properties context=''>
              <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_14443C5BE52E40DB86C217242CB0D2B7'>
            <properties context=''>
              <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_45E6B848DF4042EB9F58C2BF25359FCE'>
            <properties context=''>
              <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_191FA555E5724607B0769CA8AA51D892'>
            <properties context=''>
              <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_F9839E6102FB4A35A7D6A874E5862541'>
            <properties context=''>
              <relation connection='mysql.199w4nv0sk9i9j17cmpmg1w6ne42' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_F9839E6102FB4A35A7D6A874E5862541' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_32FDCC8593F948A5967CBB677DD1103C' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_F9839E6102FB4A35A7D6A874E5862541' />
            <second-end-point is-db-set-unique-key='true' object-id='date_14443C5BE52E40DB86C217242CB0D2B7' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_F9839E6102FB4A35A7D6A874E5862541' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_45E6B848DF4042EB9F58C2BF25359FCE' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_F9839E6102FB4A35A7D6A874E5862541' />
            <second-end-point is-db-set-unique-key='true' object-id='products_191FA555E5724607B0769CA8AA51D892' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated) 1' name='[Action10_FAA2F584BD94480DB4E3955E8556C8EB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action12_F378C968812641398A7830681E3B83BB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated) 1' name='[Action13_6C8B484E522248A08A40275265BEA460]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated) 1' name='[Action14_C9B2A38632954D5794DF7664E4D9DA47]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Revenue by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Profit Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action15_FF624CEA627E475BB0FE1AAB892D6BD8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Profit Margin by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action16_2B8F29F6C07E485189EC9BA864C92864]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Customer Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action17_A29175F0CF0B49CDB219F094FF841D83]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Profit Analysis' type='sheet' worksheet='Sheet 14' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_79E75EE78F4D460C980A19D9FE9AB831]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_3C48B81E4A184D13B15E441B84E3FA96]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_0806FABE48AF4F669C788AB7FBAA330A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_3B90E1879C0143D390205FADEFDAB24A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Revenue by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_6FF38B434E5841AD8122050B98AC8471]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Sales Qty by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Top 5 Customers by Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_69C9900073EB4AA0AC5408DF0F986D6E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Top 5 Products by Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_3605A2F3171F48FD927F92D3D05A96B4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - Revenue Analysis' type='sheet' worksheet='Revenue by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - Revenue Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_1688286974790397963]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1688286974649286658])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Profit Margin' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1688286974790397963]' derivation='User' name='[usr:Calculation_1688286974790397963:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:profit_margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' value='135' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='p0.00%' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Multiple Values]' value='normal' />
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Multiple Values]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='168' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' value='8' />
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='8' />
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:profit_margin:qk]' value='8' />
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='8' />
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='8' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='bold' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FC8CF425-9B94-4EDB-8437-9C581FDCDFE2}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1688286974682198024]' derivation='None' name='[none:Calculation_1688286974682198024:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]' value='94' />
            <format attr='color' value='#9d1f0f' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]' value='32' />
            <format attr='background-color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]' value='iLLL' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]' value='#9d1f0f' />
            <format attr='text-align' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:Calculation_1688286974682198024:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{45473DF9-B95C-4B86-99DB-074ED66CEA92}' />
    </worksheet>
    <worksheet name='Profit'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Profit Margin' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:profit_margin:qk]' value='c#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#468cd2' fontsize='14'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#468cd2' fontsize='14'><![CDATA[<[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:profit_margin:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{620829E2-1C55-4C53-9CDA-09A6EBB96707}' />
    </worksheet>
    <worksheet name='Profit Margin by Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Profit Margin by Markets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_1688286974790397963]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1688286974649286658])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Profit Margin' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1688286974790397963]' derivation='User' name='[usr:Calculation_1688286974790397963:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FAA2F584BD94480DB4E3955E8556C8EB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_1688286974682198024]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2019' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_6FF38B434E5841AD8122050B98AC8471]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='60' />
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='31' />
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='p0.00%' />
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='8' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='#555555' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='7' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]</cols>
      </table>
      <simple-id uuid='{896211DE-DB3B-4710-A655-3E198B898371}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_1688286974790397963]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1688286974649286658])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Profit Margin' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1688286974790397963]' derivation='User' name='[usr:Calculation_1688286974790397963:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='16' />
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' value='16' />
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[tqr:cy_date:ok]' value='57' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[tqr:cy_date:ok]' value='64' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[tqr:cy_date:ok]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' />
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#87e647' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' />
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#5500ff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk] + [federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk])</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[tqr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{EA940D58-5BCC-4164-9FA7-7C33E5A43E30}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#468cd2' fontsize='14'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#468cd2' fontsize='14'><![CDATA[<[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_qty:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{986C135F-CF2B-48F9-A377-AD801440BA28}' />
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#5500ff' />
            <format attr='font-size' value='11' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='c#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#468cd2' fontsize='14'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#468cd2' fontsize='14'><![CDATA[<[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3760E5B9-DC59-4B37-8A8E-50C92146CE9F}' />
    </worksheet>
    <worksheet name='Revenue by Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Revenue by Markets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6_6FF38B434E5841AD8122050B98AC8471]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='32' />
            <format attr='cell-w' value='210' />
            <format attr='cell-h' value='70' />
            <format attr='cell' value='70' />
            <format attr='cell-q' value='350' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='8' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='bold' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]</cols>
      </table>
      <simple-id uuid='{5DBD8278-E425-47A5-BED7-F042B9ABF408}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Revenue by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[tmn:cy_date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f0e0d8</color>
                <color>#efcfbf</color>
                <color>#eebea6</color>
                <color>#edad8e</color>
                <color>#ec9d76</color>
                <color>#eb8d5d</color>
                <color>#ea7c46</color>
                <color>#e96c2e</color>
                <color>#e85c17</color>
                <color>#e74d00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#9d1f0f' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#9d1f0f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[tmn:cy_date:qk]</cols>
      </table>
      <simple-id uuid='{DF5A8A09-9B39-45DF-9961-51C905684EE7}' />
    </worksheet>
    <worksheet name='Sales Qty by Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>Sales Qty by Markets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_amount]' derivation='Sum' name='[sum:sales_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_qty:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='33' />
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_amount:qk]' value='c&quot; &quot;#,##0,,.00M;&quot; &quot;-#,##0,,.00M' />
            <format attr='text-align' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_amount:qk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='8' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='bold' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_amount:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{47FBAE43-A76D-42B2-9551-962C4251FDB9}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[pcto:sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[pcto:sum:Calculation_1688286974649286658:qk]' value='p0.00%' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[pcto:sum:Calculation_1688286974649286658:qk]' value='bold' />
            <format attr='cell-w' value='464' />
            <format attr='cell-h' value='464' />
            <format attr='cell' value='58' />
            <format attr='cell-q' value='290' />
            <format attr='text-align' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[pcto:sum:Calculation_1688286974649286658:qk]' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]' value='bold' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='bold' />
            <format attr='text-align' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]' value='center' />
            <format attr='text-orientation' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]' />
              <wedge-size column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
              <size column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]' />
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[pcto:sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B1F47F5E-01CA-405E-B7D4-F71B6B77A502}' />
    </worksheet>
    <worksheet name='Top 5 Customers by Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>Top 5 Customers by Revenue</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1688286974649286658])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='27' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='c#,##0,,.00M' />
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='188' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='8' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='bold' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]</cols>
      </table>
      <simple-id uuid='{02BD7704-DA9A-47F0-BB88-A69D991208FA}' />
    </worksheet>
    <worksheet name='Top 5 Products by Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='9'>Top 5 Products by Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1688286974649286658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*85 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1688286974649286658]' derivation='Sum' name='[sum:Calculation_1688286974649286658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_79E75EE78F4D460C980A19D9FE9AB831]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1688286974682198024]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]' context='true'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1688286974649286658])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='%null%' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod001&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod002&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod003&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod004&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod005&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod006&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod007&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod008&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod009&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod010&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod011&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod012&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod013&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod014&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod015&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod016&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod017&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod018&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod019&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod020&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod021&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod022&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod023&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod024&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod025&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod026&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod027&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod028&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod029&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod030&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod031&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod032&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod033&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod034&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod035&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod036&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod037&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod038&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod039&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod040&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod041&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod042&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod043&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod044&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod045&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod046&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod047&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod048&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod049&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod050&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod051&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod052&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod053&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod054&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod055&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod056&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod057&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod058&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod059&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod060&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod061&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod062&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod063&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod064&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod065&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod066&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod067&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod068&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod069&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod070&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod071&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod072&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod073&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod074&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod075&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod076&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod077&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod078&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod079&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod080&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod081&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod082&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod083&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod084&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod085&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod086&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod087&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod088&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod089&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod090&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod091&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod092&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod093&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod094&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod095&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod096&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod097&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod098&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod099&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod100&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod101&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod102&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod103&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod104&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod105&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod106&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod107&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod108&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod109&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod110&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod111&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod112&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod113&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod114&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod115&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod116&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod117&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod118&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod119&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod120&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod121&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod122&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod123&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod124&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod125&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod126&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod127&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod128&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod129&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod130&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod131&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod132&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod133&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod134&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod135&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod136&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod137&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod138&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod139&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod140&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod141&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod142&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod143&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod144&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod145&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod146&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod147&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod148&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod149&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod150&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod151&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod152&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod153&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod154&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod155&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod156&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod157&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod158&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod159&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod160&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod161&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod162&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod163&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod164&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod165&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod166&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod167&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod168&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod169&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod170&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod171&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod172&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod173&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod174&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod175&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod176&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod177&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod178&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod179&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod180&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod181&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod182&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod183&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod184&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod185&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod186&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod187&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod188&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod189&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod190&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod191&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod192&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod193&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod194&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod195&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod196&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod197&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod198&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod199&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod200&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod201&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod202&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod203&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod204&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod205&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod206&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod207&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod208&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod209&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod210&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod211&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod212&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod213&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod214&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod215&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod216&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod217&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod218&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod219&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod220&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod221&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod222&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod223&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod224&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod225&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod226&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod227&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod228&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod229&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod230&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod231&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod232&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod233&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod234&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod235&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod236&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod237&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod238&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod239&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod240&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod241&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod242&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod243&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod244&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod245&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod246&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod247&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod248&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod249&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod250&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod251&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod252&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod253&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod254&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod255&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod256&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod257&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod258&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod259&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod260&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod261&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod262&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod263&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod264&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod265&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod266&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod267&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod268&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod269&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod270&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod271&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod272&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod273&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod274&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod275&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod276&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod277&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod278&quot;' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='&quot;Prod279&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prod040&quot;</bucket>
              <bucket>&quot;Prod159&quot;</bucket>
              <bucket>&quot;Prod065&quot;</bucket>
              <bucket>&quot;Prod018&quot;</bucket>
              <bucket>&quot;Prod053&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]' value='25' />
            <format attr='text-format' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' value='c#,##0,,.00M' />
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]' value='8' />
            <format attr='font-weight' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]' value='bold' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]</rows>
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]</cols>
      </table>
      <simple-id uuid='{2FFA15AB-4602-404F-8FE3-5545F00BEE3E}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.09l99i70x1ok9q1ce2a4u160jovk' />
          </datasources>
          <datasource-dependencies datasource='federated.09l99i70x1ok9q1ce2a4u160jovk'>
            <column caption='Blank' datatype='string' name='[Calculation_1688286974682198024]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1688286974682198024]' derivation='None' name='[none:Calculation_1688286974682198024:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action7_6CFEC8A751F1429EB3197537A63B3BF0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_D30A8AE17B814C759FDD04AE4035E1C2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]'>
            <groupfilter function='level-members' level='[tqr:cy_date:ok]' user:ui-action-filter='[Action15_3C9FCC5F6A294B6C894A75CCE11D6DC0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Markets Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (Custmer Name)]</column>
            <column>[federated.09l99i70x1ok9q1ce2a4u160jovk].[Action (QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='width' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]' value='145' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]' value='11' />
            <format attr='color' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]' value='#9d1f0f' />
            <format attr='text-align' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:Calculation_1688286974682198024:nk]' value='center' />
            <format attr='text-align' field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:Calculation_1688286974682198024:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{FB427347-0AFC-4224-89E9-8934296FE576}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard - Profit Analysis'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='9444' id='3' name='Year' w='38867' x='29867' y='-1111' />
        <zone h='27444' id='8' name='Month' w='79200' x='12200' y='3667' />
        <zone h='70889' id='9' name='Revenue by Markets' w='24067' x='-467' y='25778' />
        <zone h='13667' id='11' name='Revenue' show-title='false' w='15200' x='4533' y='13556' />
        <zone h='61667' id='17' name='Profit Margin by Markets' w='20333' x='20533' y='25889' />
        <zone h='41667' id='20' name='Profit Trend' w='57400' x='41067' y='9556' />
        <zone h='8444' id='21' name='Profit Trend' pane-specification-id='1' param='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' type-v2='color' w='13333' x='83667' y='9778' />
        <zone h='50667' id='22' name='Customer Table' w='40400' x='38333' y='47556' />
        <zone h='32333' id='23' name='Sheet 14' w='21867' x='78267' y='50556' />
        <zone h='27444' id='24' name='Profit' w='10200' x='23600' y='12444' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='27' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='85' h='9444' id='3' is-fixed='true' name='Year' w='38867' x='29867' y='-1111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='27444' id='8' is-fixed='true' name='Month' w='79200' x='12200' y='3667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41667' id='20' is-fixed='true' name='Profit Trend' w='57400' x='41067' y='9556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8444' id='21' name='Profit Trend' pane-specification-id='1' param='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' type-v2='color' w='13333' x='83667' y='9778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='27444' id='24' is-fixed='true' name='Profit' w='10200' x='23600' y='12444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='13667' id='11' is-fixed='true' name='Revenue' show-title='false' w='15200' x='4533' y='13556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70889' id='9' is-fixed='true' name='Revenue by Markets' w='24067' x='-467' y='25778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61667' id='17' is-fixed='true' name='Profit Margin by Markets' w='20333' x='20533' y='25889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50667' id='22' is-fixed='true' name='Customer Table' w='40400' x='38333' y='47556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32333' id='23' is-fixed='true' name='Sheet 14' w='21867' x='78267' y='50556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{32CC26C3-D362-4EC9-98AA-C99FE52BCEC8}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard - Revenue Analysis'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='9444' id='3' name='Year' w='38867' x='29867' y='-1111' />
        <zone h='27444' id='8' name='Month' w='79200' x='12200' y='3667' />
        <zone h='70889' id='9' name='Revenue by Markets' w='23200' x='67' y='25333' />
        <zone h='74667' id='10' name='Sales Qty by Markets' w='19867' x='20867' y='24444' />
        <zone h='13667' id='11' name='Revenue' show-title='false' w='15200' x='4533' y='11333' />
        <zone h='13889' id='12' name='Quantity' show-title='false' w='14800' x='21133' y='11778' />
        <zone h='38778' id='14' name='Top 5 Customers by Revenue' w='29933' x='39733' y='58889' />
        <zone h='46889' id='15' name='Revenue by Year' w='58067' x='41067' y='11444' />
        <zone h='40000' id='16' name='Top 5 Products by Revenue' w='28000' x='69867' y='58889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='21' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='85' h='9444' id='3' is-fixed='true' name='Year' w='38867' x='29867' y='-1111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='27444' id='8' is-fixed='true' name='Month' w='79200' x='12200' y='3667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='13667' id='11' is-fixed='true' name='Revenue' show-title='false' w='15200' x='4533' y='11333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46889' id='15' is-fixed='true' name='Revenue by Year' w='58067' x='41067' y='11444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='125' h='13889' id='12' is-fixed='true' name='Quantity' show-title='false' w='14800' x='21133' y='11778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74667' id='10' is-fixed='true' name='Sales Qty by Markets' w='19867' x='20867' y='24444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70889' id='9' is-fixed='true' name='Revenue by Markets' w='23200' x='67' y='25333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38778' id='14' is-fixed='true' name='Top 5 Customers by Revenue' w='29933' x='39733' y='58889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40000' id='16' is-fixed='true' name='Top 5 Products by Revenue' w='28000' x='69867' y='58889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3634557F-D847-4398-9C91-40DECD7103A0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:currency:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D16D61B3-203F-48C3-B633-17CA3D8632B4}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:sales_qty:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2429187</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{03C5D2FF-03B7-47DB-A9EF-F224DF426A72}' />
    </window>
    <window class='worksheet' name='Revenue by Markets'>
      <cards>
        <edge name='left'>
          <strip size='114'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:currency:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_code:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BA52AC8-3267-4ACC-89A9-630FC2AF9AA6}' />
    </window>
    <window class='worksheet' name='Profit Margin by Markets'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:currency:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_code:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79FC5D84-A00B-4493-B821-7BFF38E0A211}' />
    </window>
    <window class='worksheet' name='Sales Qty by Markets'>
      <cards>
        <edge name='left'>
          <strip size='114'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:currency:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_code:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{002E41B0-BEAF-49E5-BA14-CA4E318A5ADD}' />
    </window>
    <window class='worksheet' name='Top 5 Customers by Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A9F8E45-1031-445C-9FCE-3D9475A86591}' />
    </window>
    <window class='worksheet' name='Top 5 Products by Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:markets_name:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44492830-02EF-4E0C-8747-D92CCB5E0A94}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{480AA6C4-91B6-4B6F-847F-BC00EAAEB6CA}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:Calculation_1688286974682198024:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52EC2B63-E933-49E9-ADA8-1B8201CC1C6D}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:Calculation_1688286974682198024:nk]</field>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FE1C64E-7E7A-44A0-A6ED-723BF84D144D}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3F850236-B49B-47B6-80EB-583A37DA8AA5}' />
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='120'>
            <card pane-specification-id='1' param='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35839E96-B357-4E2F-A3BB-0A70C71437F8}' />
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E38E3EC1-1774-442F-B682-146023A2682F}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09l99i70x1ok9q1ce2a4u160jovk].[sum:Calculation_1688286974649286658:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{622EE743-3B3F-4654-876B-1FE544F3B36B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard - Revenue Analysis'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Markets' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Qty by Markets' />
        <viewpoint name='Top 5 Customers by Revenue' />
        <viewpoint name='Top 5 Products by Revenue' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' visible='true' />
      <simple-id uuid='{2E7DF70D-911A-4BEE-AB26-F0F2F0C5C8FD}' />
    </window>
    <window class='dashboard' name='Dashboard - Profit Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Month' />
        <viewpoint name='Profit' />
        <viewpoint name='Profit Margin by Markets' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.09l99i70x1ok9q1ce2a4u160jovk].[usr:Calculation_1688286974790397963:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Markets' />
        <viewpoint name='Sheet 14'>
          <zoom type='entire-view' />
          <highlight field='[federated.09l99i70x1ok9q1ce2a4u160jovk].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' visible='true' />
      <simple-id uuid='{45C6DF36-EB52-4F27-9D1D-36FB12E9A927}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Profit Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3xc13mg/UzvFRhg0AedBEESFDtFUZRkSVSxZVuWu7J2NnESr5PdZJNd
      f9lk4zhN+ZzETpw4sZzEsmVbkmVKVrNEiUWkKBJsqERvg0EbTO+97B9gEQWKAkg0gvP8fhIH
      Z+4599w7973nnLcdQTabzZIjxy2KcLk7kCPHcpITgBy3NDkBuJXIphl77Rna/+17xEIxomN9
      tP/z3+OfcgPgbH4Tv91PeKST1u88Qet3nmCqo3dRu+RpPUbbP30Lz8gE6YiPrie/zcS5TgAi
      th6mWmY+u04fpO1f/pGQy7+g588JwK1EMoDYvJ6aPWvpfuF1Ov/jSdb82n+l6/vfJth7huGX
      9xOY9qOqXM+m//F1lLIkEkPBonYpkRCy/iu/Te8Pv8fgj/6Zgn1fYPKl/yQecDLy8i8YO9MJ
      JBh45SDrHn+M8z/4twU9f04AbiWkBrR50P6TV6h94B6QKpFp9YgloFmzlfLbt146NBvz4nZm
      yS8zLmqXTI0NtP3dNyn/2Ofxe+PklxdgrDAQiuhY97nHLnYciSDA2b/+BsYtexf0/DkBuIXI
      xty0/OtTbP3zb6ExacnGw8T9HpKJ2YrA0ReeouKTX1r0PrX8/39O3Vf+D6Vb1qHTS3GNOnCP
      uFHnSS8flHQSy5jZ9qdP4Hr3tQU9vyCnBr11SLltdD79MwDyd9xHfomK/pdexfLol0hNdGA7
      fgqAqs/+DoGuk5Tesw/BIvep5/tPEIuCvHQNdQ/upfcnP0S/+SPklyjpfvZ5AAp2P4Q4amOq
      rZ/KR7+Irti0YOfPCUCOW5rcFCjHLU1OAHLc0uQEIMctTU4ActzS5AQgxy3NqhaA6bOnFqVd
      b/vxGTeB9stuAuMHXiO1AG37u08x1twC2TjdP/7RArQ4m9FfPkXYn1jwdifefB7vuIv41ABD
      bx5Z8PYB3GdPkVzA9sQL2NaKw3HuFGnfOOOnOmj4wmfpemY/UqOZTb/1GzfUrq/9DLqm3WiK
      jJz/7l+RNVQhT0zT+U9/Sd62j1K+Y+N1tx3oPsX4hAqD2sdk9yiW0S56f/ELTLs/SbT3EBjq
      qfvYA9ff+VQAv3WE6NvvoJa4cA8Po990P/HBYzfctmdwgIA7g1yaJByI4Xg3xujRE1Q+9BCR
      mJq0axDLQx+/IduC59wpBHohKcoJdR8nG/UQHB+ncN+XKVpnmXd7q3gESJHNQCYrxmCW4x0e
      w7j9QcREFuwMGUcvwYSObCwAYjWNv/fH+NvfueF2NTo5I61TFDUUk/AHMW3bi/f8KcK+BLU3
      8vADnlNv4RoPM336MFFXkIavfZ1g98kFaRuRGqEgTlogRiKCVBJMtUUEo2p8535FzBu6YcNa
      JpMmHfYSD8cJT02QiAto+tLncPX0X1d7q1MAEl5anvgm+TvvJzIxTNAVRmYwoNCrURWV3HDz
      cnM55h270a7bgVrkJZ0Roy7Jp/Pvvolx+7031LbMVELZXbvIZiWoC4tIh70421qQm4owrll3
      ww9QwJPlzm/9HRXbN5FOBmn/uz/HsOWeBWlbVVRCnqUQWckalIVFxKZt+MacyLValJI4hh33
      3VD7kwf3E0aFzmxh8rWnSAuVKAuLQKxEZTJcV5s5S/AtzPiB1zDf/9Diz4MjLlp+tJ9Nv/Nb
      i+5aMV9yApDjluamXASnUimi0ehydyPHKmB1rgFy5JgjuSlQjlua3AiQ45YmJwA5bmluykVw
      jpuPYDB4xd/xeByZTLZMvblMTgByLAkajWZOZUtNbgqU45YmJwA5bmlyU6Acq4LB86cQGOox
      qxK09k2we/tGDr3+K8zVjayrszA62EPf8BR77tzGyeOn0BaU4J+y5UaAHKsDU56csQkfaYGM
      ZNQPMScT7gSZTAaArv5hdm8yc+z0GNu2bcIx7cDvGMwJQI7VgU6rA0Cr0yEA4ikpDz/yALbh
      maClLRsbePNwM0YtHDrRxb6P7EFqqFgpluAsI844lSb5cnckxyKTzWbJZDIEg0HUavUCtZrh
      zIkTxJFRUqhhYspF9ZpGnLZ+SmvXk4oGEWcTTPoS1JflcaqlE7WhgIpi08IJwNvtDl7rDjDi
      S1FplPI/H6nC/L7n+ekT0zy+q/AqtVP86QtT/MUnywA41jbNj9oDaCUCKst1/N7uhcsElmP5
      GBsbo6xs5jcOBoMrQg26YIvgvRsL2Fur5U+OefnLfUVkMxl+enSKTmeCR7YVEveGeKXNTcdY
      hP/vUQsvHB6n35fk7iYT++oUs9r7zB0l3Fel4M+etxLHxIvvTNLmSPCF3UWE3UG0hTrW6oX8
      +LSXTzRq+N6RKTJSCb97TzEnOxxMRLL0TUf58l2lBJwBpEYNa1UZXhyM8WiDmu8fnmQ6Bl+5
      u5hSzdLrAt48N81bg2HkMhGf2WmmsfCDjUKhYIz/89IYWxvykYQi3LmtBL8zgC5PjVl588xi
      Lz78i0V49PukI0PzqrNov/z5IS9RpZJvfLSQb7wyzl99ysJxW4w/+Wg5kGVPo5Hb4ml+fNbN
      vrrSWfVP9HiwWgWgliFNJvGIZfzZg/l865CD396q44WBIDKzEJlaygvN0zx0ewlpV4DXeoMk
      fXHWri1kZ7GU02MRCpMJ5KoMGVmGMV+SdzpdVFTm8WljlqfPefiDvYubAvxqTPvi/MY+C4WC
      BE8cmuZ3b88jIhDRNRHhkY16jpz3EheJuX+tjhdPOZCrZJTrJchVatQk+ZcTDnR5Ye5aq2dz
      yewXyK1IOjJEKtg5rzqL9vqIxDMU6qTIZSIUgiwpIJ2ZmW35vFF+0elHKBYiF129fplJwbg7
      zue3m0gn04xOh/lFq5c1JUoKCtV43WFODIfYU6MmGEvzTpeHTncKi25Gpov0MhTSKxu/ONcL
      xtJ0jvh5oz/MuvfP05aQgakw7WMhpDIxE44I/3p0Gr1GypEWB4OhLF53mFf7Q1TkyzDpZVQY
      pJzu95MQCynRSag2KylahtFrNbFoArCpVs+Z9ml+/2dDVFj0yIA8UYbff26EIELG7WF+2eoh
      +AE5LsryFfzxR8t49u0JrHER0mSSjrEwVm8CEFCnFXI+IqBYIeSBjUZ6x4J0jofxRtOz2rKY
      FPz40Bh/f2QagN1rjbjcETrGw9hDC5HM5PoYnArjigv4n/eYAbh7Qz57q9WMuOI80JTH/fUa
      rK4YFXlyCg1yKgwzKcOFYhElWjFVZhXFWsmy9X81sEK0QLceTx+ysW1LKfW6mXfQ6fNOfEoV
      91Up6Rry8JOOEDIyPLSjiIJUjGNueLxJxz+/YuOLHy2nq93BG7YEj2zKY0vpzTcFWoxFcKDn
      f817CpQTgGXC7o2h1chQimfCxAPhBCmhCKNiZto27Y2RFAgp1UuJxVL4UmBWi5lwxSjMlyPO
      ZumfiqDXyihQ33zToJUiADffnVslmA1Xrj20KukVfxe+53u5XIz5wueS/AvlAgF1xarF7OIt
      wc2jQ8uRYxFYUgHIpjM8dWScr++30jIZA7IcbHXwv38+zJPvOkldmIx1Dnn5o/023pu9stcW
      4P/uH+Fv3pjAFc1gd0X4q5es/NnLNgY9SeyOEF9/foTp2Ewjxzpd/O1B+1JeXo7rIJ0I03y6
      hQww1NuBdcIxq7z9zAnauvqxDQ0Sz0LQY8fhCy/I+ZdUAM72uZHmafjTB4r56Tt20okEB0bi
      /OWnKpFGIpx3J0nGk7zYFUJBmsx76j57xsUfPFzBfRUyftUb4OUzTj55Zylf22HguRYP8Xga
      rULESevMjenzJAkGYkt5eR9KIJzgl2edvNDqIXpB2rOZDL84Nc2Q90p1mNMb47lTDjrtM9cw
      7Y7yTPM0bw+FgCwvNk/T65p5RYRDcZ4+MY1vIbPGLhLZbJZ0Ok06nSaVSnHw4NvUWfI4dPgY
      WbmJtjMnriw/doJ3T5wjPz+fc6cPc+psL2fajtJ5bohUKnXFf9eznF1SAVBIhNgcUQaccUTJ
      JG6hlDXqDH/03DDdYSGNeRL2n3Ly2TvMSAVX5hDbt0bD138+zA/O+ri3XsN9Gwx856UR/vR1
      Ow+t1wNQVqxmYipEPBxDoVp5fkVvd3vRaWWI43GeafMB8NY5B63jkSsEIBlP8tdvTFBmUpBK
      ZYhF4jzx5hSVhUrEZIEsLbYQh7tn2jg74KdlNIh/hQuA3+9HIBAgEokQiUSIxWLWN9TSdr6P
      RFqAreccW3ffdWV5LMNv/97XaDtzEqm2BEFsCqlUean+e/8TCOafd25JF8GNNUa8CS+9jhhp
      oRBBOMZEWsK3Pl3Oi8cnONbv45ddfs5NxRh1xXj6tJvf3JYHwJv9YZ74dBX2cR8vd/qJuYL8
      8ScqUacT/Guzh8cblSAUoSTDyeEgm6oN9NoWdlfxG+VjWwvJZDI8czRAeYUMvz/K+ZCA+6uV
      vHesGhoPYjIqGHVG2VVvoHfMT5FJwZA9QkOFFgCZQoogmSQNDAbTNBhuLn3GkQOvEoxm2Lnn
      djLxCBPjNqxjdmzTLiTZNEqNFqfHQVXjLp74mycQKTR84qF7eOa7f8tjf/aPKEPxBenHko4A
      oUCM1uk4Lk8US7kOvVyMxxPhp83TNI/HKC9U8+zvrOVbn6liQ5GSx7fl8Xa7gzOTMdTCDD87
      6eD5dh/FeilFahHPNDv4abMTve6yBmVziYz9/THWrsAHIhxO8Ncv2yivNPCRKiVPHZ1CIsxy
      bDjMiX7/pf0FMllII6AmX8Z3D02SyUBWIKChWMlzxyZxX3jTr8sT0zUdRSS9OYxhOp3u0uee
      iSw7arUMeMTUF8gp2nA3ZUV5fPoTD+LxBcimkxRY1tJ+9iQq6cxU0T7YRfnarSgVOiyWhXFf
      WdKnRK2V87FGHQmE1BbIEQB/+5iFfkecj91muqQDB3j8DjNSoKFCi1gmYctHK+m3R1AojZTr
      pVCnwuqMkhQIqTHJicdS3GsAk1zA7+epEQL/9Q7zB3VlWXjqyCSb1hjRirKM+RI8vK2QUDJL
      RyZJQi0n4I9x3p1iW7GKQGuAdFaJRCSgrlTNs13TZFAhEgoQXRjpt1Rr+eZrk3zizjI6fKHl
      vbh5ohe6OXx2mo1bNTgjZ+k7fQS5xMMTf/IG2+6+h9rSMIMjZ6kusNF3Pg7EkQjzcfSeY+hM
      lJLb7kOi3XDD/cgZwpaQN9ucTEdmlvbVxWp2WWb0+KP2ECmZjDxhmg53ij1VasadEY6PhLmz
      wUCRWsyoPczxkTBN1TrWFUg51hdgT72W11rc3Lspn84hH9UVevQ3x2BwyRAWnfgJ0Ymfzru+
      ouQLKEq+eEVZzhKc46bhwwQgm4UBdwE1eQ6EV1nbLpQArLyJco4cgCOs4W+O72Ntvp0N5nHW
      5Nsp13kRCq7vfX3ihB1nJI3apOWejRp+9LyVaFqYE4AcK5NCdZBv3bcfmShFn7uQ46M12PxG
      1NI49fnTNMml1BdlEV5teLgKvVMJfv3RYv5z/zRsVJIWirHIMrkpUI7l4XrXAIG4nD5XIQPh
      HYyHS9GpZDRWFdBYWYjR+9ekQ1efAg33e+m0xaheoyPsTuHzhAmkhDkByLE8LNQi2BuMcn7E
      Qeewg+GRDrQSF2vy7azJt1Oi8fFhtrHcFCjHTY1Bo+CODRXcsaGCQM/zuJyD9DrNHBxay0RQ
      j14eoTbPQSIt5sHazlkL6pwA5FhSLqZFuegLdDFx1XzJZDKkUldG82WzWfTyKDvKRthRNgKA
      J6rk9ISFl3s3sKtsCKPiym1yc+7QOZaMsbGxWb5AQuH1PYJCoXBOvkBGRYR9Nd18bfsRXu6d
      vYF5TgByLBmLnRblWmwonCSSkjDouTLHVE4ActwyfK7xLD8/v5l05vJIkROAHLcMBkWELSWj
      vDW09lJZTgBy3FLcU9lLq70cd0QJLKIANB9/m1MnjzM84brhts6dO3fV8p7Os3T3j0ImzrPP
      vTDnup2d8/MXuSGiXt4+3sy5ju6rfn2+7Sxjdjsulx+bzXapvLm5mSzgmrTRO2y7at2LeL3e
      WWV9fX1XPdba14bdG4VMnOPvnrnKEXH6+qyzSt/bt5sZkTDLZxrP8sz5bcAiqkElCg0NdRW0
      99uxdZ8hnhJhMKho2LKd82fPEfS6SIkU5OtkCEUy4hkRMlGGhiI57Q4hHsc0SqWCvbu3E/a7
      OXXyHeRqHcFwBkkmwuadu4gkBGTjTmy9biR6I363nb7BEWTaAgZaj7F26z2k4yGOvnsavSxF
      OJ5AqS2i7dw5TDopJzrGuG3TeiwlV0vYu0DEvGiK60lPdnG+twvPpJui0jzcngAFhUV0dPez
      x1zM1ISN1tZz7L77PqrKi4k4huifaMA/YSeRSGBNh7GOu9hQX8DJbidN9WUM2aaQyhUY1HKi
      jilGQhEUUhW3rV/LxOgQHsckxeXlRDJa0uFp1jU24g4lyAR6iCvBHgzjto8zODJCSXUT/S2H
      KalvJBQMca6lA400g9Pjp7S6jiOHD3PvXbvpH3NRV1tHSaFx8e7ZIlNlcKGVRWmzly7eCOB1
      TPL8C79i/fq1uNxuNCoJtWvXcuyVlymqrcHtDqOSSEmK5WzesgWZ6LI+OOAYJyGSI70Q6KHS
      5bF9x3Yi4QTibAyhRMKFdDooRQJs4SyFKjE2mw2BSILP48ZSt551teWMDQ+g0ufhcLqQyTWo
      1Epqa2spLKulpkiDw+FYrFtwib6udqT6fCIeL9vvvAOvL8yOHTuZtk9RX19PqdmAP5igqqaG
      qvJiAHQl9YTsPYhEM8E+Hq+XuGeCKW8IS8Nm7HYHu2/fgYQUoVCIWChKw+YtZBMzem5dXiE7
      d+9gaiqId2qASCTCzC0TIRRmccWymNVivF4vIqkIm9WGVJ1HfWUxbe8eRl9axdDwMHK5AF8w
      TU1NDYUF+QgzKaLR6KLfs8XmixtO8/pAI6JvfOMb31iME8hVGm7ftY2h4VFKzfkk0mJKLdXE
      4jHWVFUhFiZJi2WUFhWivZAgSSJIMTrlpmbDNkRhBwqNnkJTHvGwn74BKxs2bUYSmiSdX0eB
      biYbmqXCTDAqoiBfh06jJBCOUWguwqjXotFo0OebkWQTVFSU4fEFKSwqQZAIkUxn8QRCmArM
      GHSLmKY7FUWaZ6GxuoRQJEqhKZ9k2EfvwBBF5TWISJOfb8Dvj6CQpAkmBBh1mpltRcMeCuo3
      k4mHSMQigABTkRm13kyRKsOZjl58gTCFpjxUUimK/HziwSD5+fnYx61YR8ao2bCJpGsIRdE6
      TDoFwWCQUoMSV1qGWiZCkEmRzGRRqgxo1TLy8w2oDCX4pm0UFZqIpgRYKi24J61IFVpisSgi
      iQxTnuGGbksikUAmk5EKdszbhRlAot0wKyAm7nqLTGJuLzSBAEq0vpvPF6i9vZ0NGzcy//Dn
      1UXE76arfxi5xsj6NdXXODLJ8XfOcvsdO1fUPVspATE3nSvExo2zrXm3IkpdHlu35s3hSAm7
      79i56P2ZK4vtCjFfcmrQHEvGcrhCfGg713X2eZJOz05ZPh/eL+k3W/0bYS5vyMXs343+du9l
      OV0hPoglmQIlmr9H6vT3l+JUS4Lm988v2bnmMqzHj/4tCc/gop3/ut6spnrke7++CD1aWK4q
      AKlYmL6hUUorKtGpZ7QtMb8DZyRNOiXCUlZAX18f9fX12CfGySsqJRzwoVHKGBwZp7jIhG1s
      kvLKajTKD977ainpmYjiT8OOcjmT/hTFOjHnx6KUFSrQSQV4Akm6HAnWlSqwu+KYjDK8vgQV
      ZjlOTxy1VopeeuPLyEwiSjApQLeAmesEnkHS41czauX4MK4qAGGnlUBWw8ljb1NbU8G0w01p
      oY6JYIqJURcTk0YkgpmhubPtFHpXmLB3ilQ8yu69d2HtaEZWvpV3jr7Ngw/cv6QXdHWyvNQR
      4NM7jIy5EuzvDvNQmRinRM67Z7z81u1GXukIUFeuRByN0+bLELL6yEYTVCcMDPW4adhUwB3m
      uQ+YXScPoG24H5yDmEpN2L0pIq4xVKIkE0k9Zp0Uv9OBSKmlUC9n3OGnQKdCpVfjDmWRZGJY
      LJbFuyU5gGutAQQC5GIR3QODqJQyItGZ5H355hKS0dAl87tElYcg6iGZhTRC5DI5YhGce+cA
      uuJrqeeWlv+1r4DX2v2U5cswyYVYSlTEA3EC8RlBfvx2I6WCFM/1xYlEUogkQtQ6OUFnCJlS
      +iGtfzDjQ0PE4wH6z7fgzeopzDfw7tGjmIpN+MMpPM4puvuHqdBlGBy18dbxHryOQSbsKyut
      42rlqq80mdYEU2OU1K4lXylgdNpHXoEeVVZEOiWCtOrSwstisVBi0tI2ME2VWU17ezv5+Rbu
      rb+dyZE+VoqR4Xh/mI0VSkadMWQSAfZQGrlYwMeb9DSPRDDIBFiD8NhGDadGIhi1EmQCiEdT
      bK2RkJbMT1+g0hoYH+pCX1jAyIidgrJqIu5JnEot9+zdxeDAKHq9FkgiF0P/ZJAtO7fz9sHj
      yBIpitduXZwbkeMKrioAcl0BO7ddzr1oKJy9jelFLg7TW5tmfEPyzJdX+sbGxoXo4wIgYE/9
      5V3JKy7sSF9mnHmz1xpnbkP9jBcC9zfcuGXYsm4bllmlVTPnvUa9jz583w2fO8fcWRItkHTH
      V1Hc/rvXXT+VSiEWX39Xl7v+YiP62L+hlC2OsmGlX/uNkjOErQJEog/YbDnHh7Iq7ACKT/0Q
      cdmtO2dOvPibRFeAGnQu9pGb0BUig9U6EwwxOjr6gUdZrdZZZR8UlOH0J0kAw9Mx3hmKkM5k
      OWuNkLxwAe5Agn5Xkkw6w2lrhHg6S+fEjBaqa3JlbXs0P1L0dXVhd14OYEnFwgSjiWvUWT1c
      bYeY5XaFmMMIkODV/S/wX37ny/zipQPs29GEZZ2FgQkfruFJhNIMiKSQDOOxj1FQuRaPfYyM
      WE0iPFuVl06meeqohy99rJCXOwLc36Tn9RYfjTUqnm0J8vhmLS90hsgTQ6tAwPpKBc+1B3m3
      3c9ff7aIJw57ePqLxfO+0JVBGOt4gPToKJubGunpHaY4T0K3U0KJNgOJKEW1G3BPDiNWF7Gu
      9oOVDzkWhjmJ39q1VRx49TDV9TUEvF5SqTi+UAixXItQKESYTSEUy9hQV0p7RxfBWJapibGr
      huqJJCI2mGe0L7/3ERNtvQEGo1nMWjHxePpSp9QiiImFjDoSaGUCdlYr+MFRL7dZbr5d0d+L
      c2qM8spapu12wq4phCo95RYL4UiMCrOOEauNWFbAxNjYcnd1wXnvDjErhTmMAGKqGzYRCHjR
      arXo5CLGbF4sRUVghAv/Q5hN0Wn1csfW9QyMjGOstFyyFr+XWCxFTCLEOhlnJJokv1DBx0qk
      HOwK8VCTjuaRCFvL5LgS8FCeiHP2BI1mORG9BHc4RZ7qZtZIyNixeyc1NWUM9XdjrqjCXFqF
      v3uQcosFlVZGmSSB1x+g0rKIYZo5LjEnAbBYyniv9tpgvromu7xy5t/Nmz44XlQuF/PIpotv
      gsuqu4fXz4Q/FlUqrzj+fsOFYww3ydYn10ROTc3Mvauua7hUuvm29Zc+q4xcxX5wbYSm+gXo
      29W5Xme4m4Vbwg6w2hHv/sNFuz+r/d6v3iu7hcg4+0ilIh9+4PW0nUmTEl7dziAy1SOQaxfl
      vEvFTWsHkO74KrKdX13QNm9WUsf/blncoVeD/eWSFsjvduAPxa6qz59NDKt16tJfH1RnVnk2
      y6Q/STyR5sRwmFAyy4Q7To9zRg/+3vJUMo0jnGbam2A6kiYYTjLqX77IrKvhd4xxuqWd3oER
      2traZn1/tbIPYj7H5lg4Lo0AbZ0dZJAjSEcIOidQ5Znpt00jzcQRSRUUGhS4PGGqLIWMOR2E
      AjLiESe+SAafY4wx6wj1jesZH+xFX1rN2NAgvlD4Cp/2AXuMwyMxvrBJy5p8Mc+3B9lrkfN2
      V4C6vfkk01wqb1Jl6M7KIBRDJRMhF2dxhuHxbStHlRZwjuP0CwiFIiRDbl4fGUKXr6Zsww6G
      WofwuQYYnbCzY1MD5063UFSsJyzSk4rGSISCiOQK4gEndRu2MD05zusjQ+x6+FF0q2G9f5Mg
      BMgmQ0xOebE7pkEkpbaikOlpB3JtAUKhgGwqxuDAIHJpltZOK5s2NSBKhbG7gkxNTSFTaig1
      SOjssyEiSU97CzJT5ayop9oiBWoxqBVCzk8kMCqFtAyH2FavRcSV5ZvKLtYVIBaCULgyHZcs
      NWuIhXzIlGrKzXmkERGPRkkDWqMJuVhAT3cPEb+HWBoqatZAzM+Uw43JZKKhYS09Pb2X6vv8
      PsLhMC5fcLkv7ZZADBAJBrnrgYfJ+qfwJgWIVTpKS2WkxSq44CosFZTjDkbYWV1DV+coZVUV
      +D1ODEYjSkkGbzTD+kotDreQdeXr8E6OoSoouuJk/ZNRZBIhnRMxsmIB9QYpvbEUkUiKLlsK
      gUx0oVzGOXsMWQoqS+QUSSEoEmHWLlyA9kJgsjQQsI6zdeduJII0EgFUy+VM2qfZ3FRL0DeN
      XFuAOB3BX7MWg0GLTCVFs2UH66JBkkIFonSYLVs2o5AIkQhgZU3yFp6V5gskBlAZi1AB6Ku4
      +MiWqS7q8i/r9C86IBjzLxhpqspnNVhQXAGApbhg1nd1xQrqiq+05K7Jf1+0VeEFvX++hM2z
      WlhZcwO5Sse6dbOnZFUVM/dAr78YV6DF8J59GeR6Hegv1rt6bh/VPPohqH8YaeniLEYzmcwH
      +usItfNzSRkbG6OsrOwKX6DkDfoCvZdF8gW6cXJ2gMVF0vDITWEHuGXTouRYXJLdL5EOTy9K
      25lMhrRQiKThEYS6kkU5x3KyYuwAotKtKB/74VJ0Z9WR7XuVxCLbAUSlW3MCMDrcTywjocKk
      wptWUWS89kx1cHCQmpoawpEUpwfDVJvlhIMJVGopxRoRZLO02qJUmuVIvR5SsTQeWy/60joS
      3gkyciPmvJvb0ghAwscrb51FrVEizyQoqCynpNiCa9KK1lRCIugmlIDifC1DtjrsbPEAACAA
      SURBVCnqCuUc7Alw/851y93zVc+8BKB3YIRyg5S+kJZxb4oCnRJhMkg0K0EpziDMpMgrq8Pr
      GCcjVjM9PkxNTQ3NPQE8GQHbRGleG0+SjUf5ym4jb7b5CEsllGWyvP7aSZrui3H+8BvoSx1I
      HKdwF97Nlx7atljXvnRkEnh9QdLZFHKlGJ0kzVtvHcBsWUfvwLtkMiny5CCQbMY/0cs5fyHz
      WwbnuF7mtQQP+lwE4xmyqSRFZZWEA1MEIlmykSDuUJTG+nLa2zsvxQNc5K7bjNxfLOIHzUGS
      iTSZC9t1uyIZ9lTJeaUzxKbSGe2PUJ6HIDGFSLKIOfuXBQHCVIqEUIxaJUciV+G12xDJFCSi
      Qab9cUa62xDJFAuajzPHtZnXCFBTXUNWKKGsrIiESIVRXEc6ESGWlTJtG6Bj0MEdOzYyODJx
      RTzAuCtBly3Bo1t1dNmiKJVimkcifHyTlqODEe6qVTIQMKC09dLU1IQ8HUBVcAfu6Eo0fV0H
      8gJ+7Qsfv6Jo392XNSJtbW00NTUtda9yME8BaNqy/cqC96wBSgrz0ev1AGzedKVuu9wkpfhC
      rp2i9+XceeBCHED1+rUo91yp+V95SrPF4UYffvHuP0S6iN6gQqEI0QLEHFy0A6wkFkwLdPHh
      vxo3agfIcW2yxhrEN0FeoJX28EPODrAqyJ78NhHn1TNwfBiShkeQrPv4hx94gwSDV/o2RSIz
      I1aSSlLaj827vSiVpILBKyLWErIdZASV82pnxdgBljLn/krF5/PNjKSpGK5Qknz93BQBGWff
      dccDiBbJheL9aDSzr0Wj0YDmduD26273va4aGs0n511/zqvMqfFx0tmZH2m+hCMp3hkMMxlK
      02oN0zYZByCTznBmNEoqm+Vs83HGp71Y+7vwRZI4JqzY3YF5n2vF4x/j9WNnOHDoGGMjA7R1
      9hDxu2hp7eDUmdOcbz+Hy+ViaMy53D1dGrIZRoeHiKcyTI6NkkxnCQWDZDJJBvr6GLfP3Ae3
      YxKPPwSAx+O5VP29fkqpRJRh6xjZTJLRsQngwsiTTTMyNEQynQWyjI0OE02kSSdjcx8B2s8d
      p8C/jYDThqWsCJvdR4lRgTcQQKU2MOkNo1HKIRVDKpUiIc2YJ8i+u/desgNsl8MPzof5zTtn
      FskvnvOxvVbJcy0hHvv1Rn701E/Qy+Orzw7wPnrPnWTfp3+Nwf5WzMosL71j5zMP38Wxtz3U
      FOloHRojwCowAM6BRCyKPs9AX9tpdOVrGBkewjM1xaY9d1BbW8nAyBTZmAdHSEDWZUOUNNI/
      Os0O4+zEC9FYEmU2zJnOQdaUahgatTNtn6CxshBvOAyTDqTpIBpTKSODA+Sp03MfAeQ6M6nA
      NOks2O12pqamsE46qS024AsEUBqKCHgceL1efD4fAY+bnbv3AJftAD9uifB/HzKx/9xMvqBg
      Cgq1YqLJDFND3Sh1xlVsB7iAWMbt9z2Mx9pNnk6NKyFn9/oyWls7UGj1CKUKtFotBu2tYQjL
      puJMuUPUWC64WQiEmAtnPIltI6OUWa70OPb4/MRDPiLx2Y7j0ZCfjMpEvnImhlkiV5OnVxOJ
      RCkrryAWvVJTVlhYOPcRwGKxUGRUcd7mQ54OUlVloEAjoa27D21BOYPWAbZsaCQZdOKNpinO
      06OSzsjXRTvAA/VyDveH2V6tpnkkwifXqznQHeG+egWTvhjr1zWgkrL67ADvRVXAtnUFXEyV
      fpGyisuf1+lXn8/NByKSIEhGiUlKkAQ8FFtKsQ6N4LQ7yS8qQS4SgMhIgXqSqbiYypo6ikor
      kMtmP7pSqRSv20W5pRKHw0mhIc2oD6T6QvxuJzXVVUhEMDY6gkypYtweuLGNsgMeJ9O+KNWl
      pmvuexV997s3tAhe7vTmy+mOnU6nPzT782L2b7HavrhR9nKzJDvFz+VHvBbL/QDnBGD1astX
      75XdQlxvevScC/oSxZknmr9H8NuNBL/dSGps+fPYLyZ+j4Punj4S6cuxrmODg0xNWfFfyOx+
      MW38+Pg4ZBL4/GFCfjfDoxO47BP09PaTyqyU3dVWN9ctAB6Ph4DXTeJ9P1TYM4Xjwi/93v0B
      Jv1JAPq7OhifntECpRMRTpxoJpHOEnDbCcTSN70doPtMK+bqMg4fPkpH6xmOnzzD+NAQU1NW
      Ors6aesaxu+fSRt/5FcvMDY1QVtXH8dOtFFSZOJc+3mqS1W8fbx9Wa/jVuG6p0BnTp8EoZz6
      yiKmXV6KKyqxjY6TJ41jiyoxquVkEmEAXP4kPzrj53/v1nJ4Sg+Dz/C1r32VF595mvU7buPZ
      l4/A8BHWPPr1VREPIJIqEWaTDA4OUlRaTYqZNMAVNbUMtbYSj88IdlndesYHzoO4AJFEgUwq
      JZOI8sorR9j1wKPLeg23CtctAAGPA525jpHxafZsqePnLx7ktnsfxRDuI11QjXOolXh8xuKb
      r5NQrhURT0HSb0Ukm3GcU2k09Pfb0CjM1G3eQJibPx6gtNrCcEcbGzbvIOadJJQQoDEZkarE
      KGViLJZSUqmZ+2KxVKIQpQihRRjz0NU3RO3aRiylZgbG7BTp5+fXkuPadB1/hX95o5+7yjXs
      eOxjHPrlG9cvAJu23YFEkEaqUNPaN80jn/40Az09xPVaTFoZKovlUt6WaW8SmUTIVALqDRLU
      9U28++67bGxqoq13hHVry+lpnUS0CuIBymrqL7txXyWcU2e57BF5MWveTJKZK9PIrK1VM1eu
      Nz36YqZVX6nU5Ek5N+wg+OLP2XXnvUujBn2vHeB6EqoutxpzpatB4/E4spvAHXq5sXaeIKis
      4Bf/9i985jc+xWsvHcrZAZai/o0wl3uXmOpCeB0BMXNJb36ta0+lUkSj0XmfdyWxOkT7Fud6
      06PfaHpzsVi8Iqy5N0LODrAAtJ06TiiZnVOKc4e1iwnf5W1Rr14nQVtb1wL2cLHJsv+nP8Qb
      nR3Mv3///kuf25uPE0x+cCudJw7QNxkk6Jniqf/4d7qHJ2lubl6MDl8gO7cRIBENMTLuQCER
      UmyxzHnY6Ovro75+ZqE16U9SrJPQ39WBVlpDaaGBTCrG6bOdbNm+lXTIw6g7ijThu6nyAqWi
      PlweH6GOPkJ2G68MjmAu0ZHMinBGxCiFSdxjgyTk+dQWaYgFPZjX5XHyjTfJr9yMb6wP69gU
      G2qKeOPQSfbs3Yk/miQSvHnS5AYnu+kZGEV0uhNb8yvUbNlN54mjbPvIxxkfH+fNl5/jUMsI
      W4oV9I8N09k5RFamxGgsRhS0EhAaqdSl6O4b5JNf3UbP+WO4kzIITfPkk08S9Do42XIeS30D
      J196js177mJqepo1axt56403+dJ/+x/sarqeBb1gbs/ykbePsfeuezhz4h28XjsSdQFe5zQ6
      YyFe+wgJpBjUUkjFMFU24rXbrtgn+IPsAD9/+sfsuud2fvr8IZTpaXzxBKKY+6ayA3S0tGIo
      rWR81IpOraVABXGgpqaKxHgcAjYMJjMVtetw2PoRiUVMjw5gtKwlGQ4gFAoRSaUMWceoLDIS
      jiYRiEUIbqI80SeOvQsKFa2nj6NIQlVJHi0oKCvKpwNobWnF4UjAhcTJe/bcwWQUvMN9WEds
      VG2pxumxUlk2ow/LL19HrfcURzomqa4oRpwKUVK5Bo/TTk3Tbu5YX8aT1mnUSiVraoo5dbbt
      OgUgPceXuVCETC5DJBRTX1XCq2+dQmooQZtNkUaEiDSBUJRN1SY6RscQZrME/GMIszPj3QfZ
      AYKxNEVFBUz3/RKFqZSJiTHWVJfdVHaA226/C4DN62dncSsoAKi59Pea2tWp11+3+0Hu+2wp
      YzYbGoUEXwx+6zc+RwwZjz76KOl4hLhAhl4uArEYiURGYxpSmxqQiz+GM5im2HgPkw4PpUVq
      xOlS/NEU9zVuwDu1FqmugKKxYcpqH8brdFFaWsRX1CUYisqoKC2ksLz2OnsumpsWyD42wrQn
      glanosxsYNwdw2ufIK+ohEzishbAbFDiCCRwujwo1Wokggw1NTVYX/0Hjvz829xWoWCi5muo
      629HlI7RWFPKkZPt7Lr7Pgq08kvz4Rk7QCXuqJCmupJl1+LktEBXv/aLef5vZnJ2gCWofyOs
      ZDtAOp2+ZO2/WcnZAZag/o0wl3sXe/sJMteRFmUurtBzEoBsgr//i2/y2Nf+hFef/SEK4LNf
      /R2k8SBPPfUTkiIVn/3UQ2QFYgIeDwfeOsgnHvssJsPyT3OX5FfNBCbJhuwItcWrMsX2cnMj
      aVEWAnt/C8byGo43t1wqazt5hKmREcyNe1A5TvPGG29RWFFBZ+sgHsfEsvX1/SyJAKS6f0nq
      9Pdv2b19Tx44gL6mmGRGhyTuRawykgy5CSegJE+DKxiksKiYYCiNmDjZdBxfKMWmjTdHevQT
      zW0k0jIme1oxKGZMS00772JjXQ3f+f5PAQEP3rON148dR5Nfg0EhwO0P31wjQMzvwBmXEfM7
      qK2d36o7mczwek+Ij98W5K2DB1HpTOzaupGpwQ5ahj00bVxHT8sZlKZS8I1QsG4viYk2Etoa
      mupWw4iR4kz7MJ9/5AE6213YRrvQqeTIgNGgj4Y7d3H29VdJKS3ICBD0urjrgUeWu9Nz5pP/
      5bev/kVeGX/8x1+/9GfT9rsufPrE4ndqjsxZAOIBJ28camPvR/ZhGx6gpXsQrVyIRpJBrC3A
      6oigFGcgFUMmkyHLxLAnpHxi391EklmcgSRINZhVMk529bFr60asA0NEkmJSEQ+tfTZU406U
      4hhTgXeQ+btxFShWhQBoDSYe2FZGe9t5/OE4RoMBjVKGhJmU810trVjWb8PWP4RIoaCssga1
      fGVtCHg1hELhoi2+l4p5TYFKSktxTDsI2fvxuEPoK0qoqzLRPR6goKiEkH0YgFgshkwu54F9
      ewHQKUWIBRAL+SjfeRsHjv4Am81G5cZtNEoC/MdTr6Ar20jE3oVSr0eYsCNWFS74xS4X67bN
      GPNMm4tmfTdltWKwWJAD1WWlS9yzG0MgEFx9gZ6OMz7tp/QqO4WuNOasBUrFwoTTIhKRIOl4
      hIRQjlYpQy2X4Ju2cbTHxX17thMLOImkhOjVCjR6PULA+uo/0P36d6nc91UCxh0UV68jmwhh
      0qs5d36A7Tu2Mdh5DmWBBZkghTibQK4xEopnMOdpl12Ls9K1QMudFSKb9PObj3+Z//YX3+Hf
      /uYbfPkrv8apDid1piTSwjXkCfz0OZJ85pH7+PfvfoukSEVJvppDHU6+9sW7aW4d5q6djXR0
      D1FaWkpHzwgfuX0drx14h09+7tcwKK9fg/hhzPmuieUqdABXyf2TX7GWRy8kdtIoZ09ZzBUW
      CvbuRVJVi2TdHRdKZ1Lb7d41s+fA2o1bZtVTzz0mJMcy0nf2Xeo37+Sd5g4aNm5kx8Y6TnXY
      kSoNvHPkLW6rLsQTU5AFNm3ayCsHT7Jj0xp2G9fx6muHuX1DGS//6hDelJz21laqyky0nZfh
      8gaIxBMYlIoP7cP1siSvNUnDI4jWzz9zb465Md+0KAutjRudDnP73rvp7xvAVGKk+fwopYUa
      znd2k19YhEwhJeYOkwEmJ6cwGIwUlFXz1vNvsKWxmuPnR9mzswmBoZao9RQdI06KVUoUojSx
      WAJYLAFIL40hLOkdQyQUXrcNYLmnMDdS3+924ItlyCZjl0IgP5SYnz57hHpL0ZymQJHnvzwv
      O8B8BGA1RYRdjSWzA2SEolvOBpCJ+zjRNsA9d2zlyME3sQ0NUV5twT5lp6ykmK6RaTRKKdlY
      gEgCtt62jv6eHopKy/CHBcvd/Q9lNbhCXBEQ45my4gmnGBwcfN9h1w7Q+KBAkIvl454kb59s
      4d22fgBSETc/f/EAAEd/9TwTPh9PP/0CkOVnP3vm+q5kBZJNRJEo1EilUmRKNXlKEWfP96NU
      q4gHvUg1+cTDARJpUIlgYtqOIBNjbMKONxBe7u7PgyxDfV24/bP7HPa78QZnh022njnDNWJj
      lowrRgDPlJXhYR8O2wAT1hFKzXqs7hhSpZyYP8Sbb0wikiuIuEbRlzdSoBZgnfRAIsjBiVFq
      Nu3EM9JJRl3I1KSdTCZFUxOUGiW0jXRTUzKj5vvlS6/jjiSxD7TQ1tmFomErx3/1Otu3WXjr
      9CCf//xy3IqFR6QposLopm/IisViQSmCwno1ttEJdMVmLBk5GGd+AhEgFGVJJ/IpNJiIc/Po
      19997VnGsoXslMnZ/9M3KKhqJGLvxenLUF6YpdOpYUOxiGBSBGEvAn0pSccYa7ZuZbmtHbOm
      QFW1a8iGptm8oYqfHuhke5Wewroquk6dZdLhZdPmTbhJcUdTBS++foJYIkFhnpYCJfR0daER
      xQmFp9AVVBBzWwHIZjLY8u7iMZMYm3WEjEDC6MB52kqK0MlgcmKC7Xfs5F++/xI7N64un/na
      NY2zyvKN+QDMbBNy5UYPJWXzv/75pjcRaovnfY5r4fEEWH/3PiT+HjSWTdj6zyEWiymQgtlS
      ibq2lt6jv+ALX/gUP3m9EyaH0YiX+9EHSF25CI4GfSDTEg35yCbD9Fpd7NrSyPDoOEajkVQ0
      SFKoQCkTodfrsA4NodLnIUzHCCagyKjC7vCiyysg6J5EqjZQmG/Ef/g7BBFTevdXsNk8lJeb
      sdvtmM1mwj4HabmWiC9MPB5CJpNhNpuv7OZNvAi+UW4Gd+hkNMhLL73Mum17GG47QdGaraTD
      buRA+ZoqXn/zJNXlhWzduoWjB15GYKhEI4jTuOwjQHZptECxzhcQCYXXvRvhcj/AK10A5hMQ
      I5BpEBWsmfP5PywgJpFIXPW7m4VcPMAS1L8RFloNOt+U6KtdDbokaVEygcmlOM2KI+yZ4uz5
      ATIxPyfOdHzgcbO0aDE/fdapRe7dwjHcdY4nn3ySc13t7N9/YNb355qbL2l8vJPDdA3Pfh7e
      mz7lWowNdPLv//FDHNOTNLdf397IFxnqbVs6O4DkFtwpPuyZoqPXhS4bxOX1c+DAAUq1MuIy
      Gd5YloAzgkIpJBMLMDE6yuZduxjtbkGdZ2Y8KKbeMtt5biUy3H0ORzCJWDyz58E//NU3SagK
      KVPFyRprOH/4FzhSIfZ/94fsvnc3Il0xz/+4g4ceup9zp99FZmogMDXOt77xR5jW3UW1LsUr
      h1rYs6WYV5sdfOr+Dbx5qIVv/u03OHLwLdQFNYz1tfHkc4eYunMzPQND3Na0gR89+0t2bd2M
      1+9mQ+M6Dr5zjt//wz+iunj2jpIRn4OIUHZ9I0BHy2laWtpIXN4DAqvVes06M/r+mfniRTvA
      2HAvb73+GmNO+6q0AwBUmVScn46jlQpAICAem9k7oaKmBoPOiFwiRK7SkqeR093dQyweIxCc
      f4D7crO2cdOFAJckVusEBoMBTyDC2roqausaKCs1s3bbPdy3cz2JSACFsYhsxIXN7sPpmAag
      tq6OU83NtLS2EHQ4iAK/89//O13v+Xvj1l14hs7iz6owm8vwudysqS3H7vSy+4FPU6JOI1Eb
      UCg15EkidA1dPfosmc6QCHqvbwSYcnqpzJPSOzxOarqPmLKEke5z+Cb6CckLSMWhSC/EOunh
      /o/sZdoZo62vC0XDg5TopZfsAMXFO2k5c5LB0eFVaQfQl9SytVRCJBRFIhYgSCfwhWIYjTrE
      MgX5TQogTSIaJIGcfI0Uu8uLwWCYc8aalcDmOx9meGwKUPPoox9H+qkH8MYElBfci3XKx2e/
      9GWm/WE+85kHyTMo+GjxRmLeKeRaI18016LXaMhkUghSMTbsViHLRgjHBej1clQ6JfmffZxw
      XIAaKCsv4/aHvsD6hnrKC/MorqhmcHCEtXUVOP0JzIa76Djfi6XKQmFBIfWNV4+q0+WZ2Zxn
      vr67HA54EK/ZA9MjROJxUgoxRUVFqOQC8mrWMHT6CN3OLLELGoLRCBf0/VZsKC/ZAUadEXZu
      28BrZwZWpR1AqtAgBVTyyx60urzL3yuk0pkPev2lMotaN+/zCOofRlo6t0wbC2kDuJgWRW0w
      scFguuI7w4V/aypnXHrLlJfTrxikgHrmdzboPux6MxQUX9grOJlEYyigwVBAOpWkonrG/rF2
      zUyEoskgJQ2su/DQz/ybJpn84NQt16UF8ng8GI1G4pHAJb1/zO9AJFOiMeQRCwXxuZ2o9HmY
      8gxE3/0umXWfIS3X4nP4LtkBpIIUXQNjbNtxG15XKGcHuAorOR5gNfgCLZkdQH4D7tDL/QCv
      dAGIduxHGJ6eU3uShkfm5ZU7FwFofed13u2a4PY7N9N8pJdPffx2UhINeoUAm91Hy7G32HLv
      PhSZLH7HKB6xmUqDALk2H8eEjdLqen7yo//gsY9/lEBSxIFX9vOR+x6ktrqcnp4B6tbUMdDT
      Q5GlFr1KxE//8z/JaIvRp5yUbrmXMo2AGHIk6ThpiQRpJkFcoEApTOAIJKmvLr9q/2EJ4wFy
      LB7ZvldJzMMOsNCpaXwuO5FE5oKgRPnHf/gnUup8KgwSdtzzMFOTE2QI8Zf/9zt84tF7sAfH
      OONP8ui+HTSfPEr4zAAi4Ol//x6mhjtJRsOcOvhLDh1U4nI5WHvbboJTA3iPd/AHX3mUYCCI
      Ll+Ga2ySgkyMH/7wlwDk6YSENaW4u84QEuupM2ZJmxquKQBLYgfIxoNLcZoVy8+feYZ02EFb
      /zgjA334QlFCPheDw6P4fT5GRoaIJ+J4fEF8Ph8+nxeXy7Xc3Z43M1tiiTDotTQ1NZGnV9E/
      PEp1RTEjY3Y2bt/LhtoyZCo9cb+d3vPtTPjTCNMza8Waulra29uQicHmDFFtKUGhLcAkjWJ1
      xhCTgHQCqUrHQF8vVdUVjIxMIhUmiAskSFDyxcc/hcEwc/6qmjq629u5VvLGJZkCJUabkVbs
      uO76yz2FudH6B15+DlN+EQF5AWZpgt6RSRRSAWqJBKEwS+XmTXSdfJeUtGQmLYprgprb7mRt
      VemCW4Lnm5pyta8Brv2rxvwMOuPUlM2O7m9ra6OpqWlOJxmfcDHU/RprtuyhzKThXPM7+JMS
      1pTqOXt+kN137+a1Fw7z+OOf4Gc/e5bPf/5z13UxKxWZtpBUxEUylqErmkEuFkE6yrQ/TFGB
      luH+PnQFpYwOTZBQSNDkl7C2auVniFj9aVHiAYbGA5hw0h3QEncOIUgnKK1pwGUf5e3jSWL+
      KRLRNBX15cSiCbKpJHHk2KwTVJTmsWfPHoryZHSOjTM4aqfMJON0ax8maYoftab53cf38ZNf
      vEjrGydWnR3gInv37p1VNjLQy4Q7SJ5cQklTEypgS9OmJe/bjTA7LUqS8XE3paXmD6wTDXoJ
      psQUvC8r3Pj4OKWlpbM+LzZzGtdFIhGpZJxEMo1QIKSkMJ9zR+2Um9dAKkyBClz+IJsaG+k4
      b8U9eIbium0IBTMeIL6M4oK+fwhbgZJsNk0kkeaLn/kEhw68jN5UvirtANeisnYNldeb1v59
      iHf/IdI5eoOKFmFr1IPPP0mzLckD+3Zw/GAXWxqNxJUlVOrhzICTlgPPcufnfh2pPwCiNKL8
      as6MtlNav4G2081svetB3np5P9s21OJIqrH2tPLxfXs51Hye++7czjsnz1DduAW8w4Ql/6+9
      Mw1u67ru+A87QCwESIAkAK7gJm7al0iWYkWWZTt2lLiOEsdNMo0zTWOnHWem6XQynU487Ye2
      ST60nSZpliaN7cRpHNuyFUeWZUuyRImkKJqkuJPgBmIhCRILQRA70A+UKNGULEoUKYnm7wsX
      vHPffXjvvnffuef8TzbJSStp5mp2birlB//0PZS5VagCPbjVGzhQk0mXK8yhgwdYTFLpRw8A
      pYFczRQz8mzMai/agi1IBXEmfdMcOPjF2flhYTYiQKFRMWgdZPeuLUwUm9GlKwnGZ5sXhqfp
      mRTx1J99ijGnlycOHsAfl6IRQU7ZfWzfXM7YaIAHLq0DrHFzCA3ld0XE5mwfAhx7bxhz8SQt
      Xjffeu45fINd7N1dxXe+8c88/ecPcL7xfRSmKvZkqXGZsnj76LuIgOHhIcKK2Tv/9EwEccjJ
      yTN1qPPyOHfiOPGYkOeeLuF7PxqheDLKzk3r2LC+grqOMdatt1BVtZd3Xv8lpXoJfe5PUWa4
      cbbByqhCjHYgybl1odc7/RJ7N64DxDoOE+t8A7j0BDAuj5DuYo696dQRTrfZ+eS+XQx1uwhO
      9CLItJCvijEyI8eiiuBTaAmNR7h/i4mLzig9TbWUlpXS3jeMMdeCODGNOBbAPiMlJ12GRhKn
      b9hJcVklapMJV6+TZHAYbWE1Ay31ZFo28PnHPsmvf/ozplIqDn6qircb7ZhlAaxjM2wo1iNL
      NxKVZbJ3y/Wfemv5ACtgvxSu991F6n5MtP7HAIgO/jdpxbuXZf+rPR9gRY4sFQlAmvbGG34M
      aG6oRaDQkGvKwfchOXSVNEVCrKT9g3Ps+OSD5BkXp625lJvLUlgNbtCVSYhxd6/Ebu4JLMUW
      ggE/galJ+odcDA0N0X6xjdLyEsLhKB2dneizzYu++O8GvG4Xzc3NuNwuGhvbFnzucjjmFqO8
      rkG6Bhcm+zQ2Nl7z90jQj9sboLmujg+Lq4S8Ltr6RpbU91t6AiSjM7R29JBhMFJwHZeXxzWE
      SFdIuhzGnGN0dv2J0vU7sZh0tDc34J4RsHvzOo6ebODgp3fx4ovHVu06wNWEI3HUSjkJkRJp
      YvyKHLo0yaR3mswMHTlaBTaXm3yj4cYNwh0vVNdS+zaNIzEeemgHFxo7GO45TzTNSL46jn1G
      Tuf7h9lz6Ev0nqkju6gQQ34ptcdeZ/O2HbQ0naegZje9LY04BzpJqPMYHe5mwmHHUmzkzLkL
      9I4leWBDAfKeZk6e+IAd22s4W1vHgb2foN2ZpKY075b7fksDYMptZ9QXpqLawLFjx+bVA9hR
      Wcj5DzrJ0cSJZcKeDYXosrMw4uFixwAW0xZef/11NnxiP4FQjPFROxBcOp1RxgAAD3hJREFU
      lfkA1yLbnE+2eTY2paRgfozK3n2fvKU279QU6GrKqzaQo9cCAdq7J9i8K4/mrj7+6plvEbL3
      snNHNfXHP+Dx6jz+dLYJRe4G8g1K7CYz3W3tCAG5XEqvw4kIKDGr+Pmr53jm0E60TgmTfY2M
      uB0c/PLXGGysxaAWMOj0ALc+tU5Gpm5tAMh1RvZsy+H48feQiubXA6g99hZ+zyTriixIzbOx
      5y31Lfjzd/G5Byuw2UbRZeUSG7USV+1HLJz11n7c1gGWimznFX3P2RicO0fhuo2cqm/BadKw
      ddsu4tN2RsMSDj68lz8eP82+/Xu4cL6Hhx/Zh1qv5b4H8rFdPIdtMo3QTJRtW6oRJsOEPE6K
      ijLJTpehyVFizHKRX1JNQ9s7VGzbSn5pPkcPH6aysgiJxkRJSQlhFqqVLxahTHNrXqBkPEqf
      tR9TvoXw1MS8egCTo3aCUSH5uQYGhpyUWAoYqn+LobCSwtJShAkRalkcuy+KQZGie2CEPIsF
      pVS5lg9wDe5mXaDllEUZd9pIyzChki/v9762DrAC9kvh8gD4qIA36eM/R1a4c1n2v9rdoCvi
      BRIaFi/EdK/i8Xjm/bxM0ONi3B++rt21xQTiDA0tzbuxkiy3LEpPaz02m43WHtvt6vIcq3do
      rzCNjY089NBDNDY2kpmZiUwkRCgW4HENk2auwto5SUZ2Hv0tp8mv2EIy7EesMtLX2oDNMUZ5
      kZGu7gHWrStk0OFmOhCnsHBx3o077QW63bIoibEO7O5pdu7YTEu3jYJMGRFBLw2tNiqK1JTm
      ZpG7/TGqTEsvs7oiT4CPA8loiI6ODoLhONHgNJMzEUbHPZRb8nEOdBMijVQ8gkiZgUkjIpwS
      4BgZQavPJhoKMDY6SnDCRVNrP9VbapDcxJm5G7xAt1MWxTcdwaCWMDjsoKR6PTIRlJWVkZOX
      x6P3b+KN83Yqb8PFf6lCTChVd6YZqUaNPBWndONGpFdtcjNx/x0tLQvsATyuAU43tLNr3wGy
      NHIaak/gi0qpKdIvKh/gTs/hF2NvtVopKSnBarWiE07TM5NBoTqG2+MlO68Yh20Qo7mAaCiA
      IV1O74gblUpLyOdCotIjJYzPG6CwrJhhmxONWkeJJe+eeAfwjjsZGHFhzMsjGU0iFUQuyaKo
      GXL5yM/WMOYPIhVKMegU+KPCOVmUiUnvPFmUiFCJQS3G5Q1RWmiio70DQ5YBlS6Lkb4efJ4B
      Br1qvvTZvbfl+ASplC/10v8eIyNLO1v3Vy0hnJDhS6mRRdxEZgKIUsk57X+BNgtrr5O0NBFa
      uYCpYByFQoDGkE9k3E6aWkJYVcyOiivx3D/92Ss8/bW9/M8L7/PNr3+en/zHDwklZMgVQr76
      5MO89OZpmt8+x98+/wz/8pO3+NW//+NNn4SPYqXtnQ4HRrN5UeG4N+LyAAif+leS7mtLAQp2
      fhtF7obbsLeF3MgLdKenX0tFDGAw5iFLegijZGuZhfqLQ0CMSDSGRK6cp/0fn5rGkJMLETeu
      UQdFRRVk5RlorWtCrtWyqcxCfV+ACY8fkjH0ej1qaQyXaxyZKg2bzU4kJUcrjrP/8SdWZT6A
      yXz7ks6TyVn5Pcmev7vuNolEYtkuxFQqdd22k8kksdjVdV5iOBwezObr13gOBbxMx8WXpktX
      cDgcmBf5vY05HAilQuQqPWrF0gTWBalULNXT0YM8PROtSo5aJWcqlMTndqHSZiCIf0j7X6cF
      xJCKIREmcU5Mk5OhZNwXQq9VzdoHI8QTzA2AeGSGC80dbN2xAeeIB2HCjy8qJS9TRrdtci4f
      YG0d4NZYarTtrbZ9ORju5Ou/onEkxoMPbqP+ZDebKnVEFEYKtdDUP0nLu39gz6GvIJmaAmES
      kb6IGVsbptJqLjY1snXPAd47+hpbq0pwx5SU6sW0DvnYXmmi/oMutu7ex2Dz++gsmxBN2fjN
      b97i4FMHyDSU8cG5U+zc9yi5qjD/9l8vUbNlB83HX2HPob/kwZ03zrBbC4deAfvlJpVKIRAs
      T1G9j2r7wwPgkUd2Unu8Do/bi7Eoj6DPzTeeeZbf/vwXPPnsk/zD33yfr35xLxe6R5DnVPDZ
      Hfk0tLbTPehHGPeQrZYQVpjxOKxU5aron0ywYdcuzr35JtNyPYVGHZ4xB3qJBF2RDpW+mohv
      iD5Hgm9++SFefvFFpiWZSKbGefLZZxZVXPXuPatrLJrluvgX27ZWn0PamIN4HEzmItLlCYSa
      DMqMag4fPUlleR5nzrVz//795OXl4Jdk0ddcxwXFND0DDoymIsQJBeL4NJ6ZIBUWI10jPsrN
      St45cowHH/0crWfeRavPQRbz4hiLUJyRRTTix2obw2gqJzzlYTouRJuppsAo48y5BvyOUSDK
      oUOHrtPzFaoTvPYEuJ2ksPZ0IVFmzEXiDvR1IZClk5+dTnffIFnmQgw61U23nIgE59knY2G6
      e61k5uQhiAbwTgXJMReQrpqNv1nufICRvjbE+hKMunu8Uvwat4/gWD8CbQFT4wOQm0PUO0JU
      lkPcb6fLP8G66vV0tbdh0NXcdNs9vf2UX2Xf19NLcUUNvZ3txELTpBvMaJRXgs9EIhFpaWm3
      8/DmUb5hx7K1fZkFyy3xoIezDRdo6+xdVAPjQx0MjX90TVv/+DCHD7/J+NRsSED9mRMcO3EG
      W383J94+wtmWllVbH+B2E4/FkEqvBL4lYlHEMhkiIC4QIlrCbCj5Ifs4QiSX/rF5+05ys9Ov
      eV14x500NTXhHHdSX9+64HOn3X4lIeY6oRD19fUf0bMYtbXX+zxFX2cbLrcXu93+EW1cG9Hz
      zz///NX/iPoc1HU6iUdn8I876O3qwGkfYngywMDAMJ0XW2nvsaLXKKg9+S6IpXgnxrBPQX9n
      MxfOnmDaP0m7M4S9v5PCwkJeePldvviFPfz25eNs3VxJMhbi5JnzPPTpR2irO4Vlcw0v/+cv
      Ka/J5ddvNPC5h++f18lkMolQeOuL1nfa/nYiV6Uz2NOORK5CkgiCNhf3QCcCWRrFOZl0WwfR
      6LLQam5+CqQUM2cf8HvJzdLR0TeAOj2ToG+cMfck+mwzqrT5kadn//Qyp1ptmHIzOHe6laGu
      epr6nPhtHdReHOTIiz8ikZ7OWy+8xNhUEMRSjr7+CgiFHDn8ByZjClobz+KwttM+PMlwex1v
      HT1KOBonEAhQ2zJI0OuksfY9TrzfgFqR4oWXfo8mp4jIyAf85NXTFBiUfP8HPyTLaOTwK7/H
      5Y+xrqTghsd8zSmQucBC0NWLOzhDVn4RsakJ8krW0d/4PuK0TMTxKbq6OglPe5iJGhGJREQu
      6QbpzUVs31TOseZxItFZH/H8dQAbco0ReWyGcDzIoE/AZw2KVbUOsKwIpWzcNN+9t/6qv9dn
      3HoqpTIja4H9xhr9omwrqjdhNOiAAK2dbrbtKaCpo5e/fu7bzNi62b1rPWePXuDQ+nzePN1I
      WsEmCgwqbOY8OltaZxNiFDK6bXYIeyjOlOJ2uwGwjwXAayeVSmHRwWtv1vLUU/t5p6GFv3h0
      O4/snOLdunaqq6sxSWfIrroPa+tZbBWFiAFDfv51y7EueAlORkN09Q2gM+SQpZFjHXZiztEj
      UaYTnvbT0nAOb0LOvh01eAMz6HQ6xDIFYw472owMhAJmawgPDKDSZqDP0H1oHWCSwOQIAlU2
      xUYN/piELJ2U0bV1gHuWgY4m3j3bxJb77iMWiBOftuEMydlequd8r5vtpQasnhlUIhVVFh22
      gJDhljPoC8ro6e2juLQCYSLEjMfBlFBPgSbBa6+9xuNf/w49LXUUVW6GkJfjR35P6dYDPLK7
      mtf++B6PPfEFZJFJ/vDm22y+bz8pzwBJtYmh9kYsm/YQnLCjACp3776uS3TNC7QC9quVVCo1
      t1J9u5kcs6PMzOXqfJjlkExckQEQj8eX5Ku+03P4D9vfDdGXdwOrQRZlRW5rC0VUb5573X41
      M9jVzKn6FjZ+Yiu23nGystKQi8VUb9t23bn33cKKDIClelDudfvVzlB3C+5LCTFOxzgOh49R
      axsToRAt586hzMrn2afvTqmPFTmzS12qv9ftPw6UV21Ar73iei0pKceclY7NOY5We/eqAq7I
      OwDAmHOECX+Yiooiujv7qawsxznUgzSzEL161q8cj8zQO+igcl3pVduXMnRpqV+fJsKbEJGf
      raetrY2amvmrnVMeN87xCXQGE0Sm5uy7O9rJzMkjPjWKMrsYrSxGW7edmqr5+uT2oX78wTCW
      sgpGh/tISZQUmvRz4QBz9mlrL8Rw5R3A63YxZB8lJzeXZDQJxNGpFYxPRZGlQoSRU5R3d1a9
      X7EzOTbhpTxXi9XuwdY/SPG6ctz2AeRS09wAiMZTCAXJedt3trcj1piJ++1IQlLGUinMGiG9
      Q2MLBoBclU6ZWk1rVz8iEnP2pRVV9Ha2I5UKCYwMMS2OEwgvlPMwF1iQ2XtxDvcTEmgRT43T
      GfBQeikc4Gp7my/Kri3r59knotO0NV1AUbCFyMQg5blahmc0lOXevXfApSAQCJBIJGSZ8q/U
      8r2Kq2si362s2AAQCoVIZFJiviiFhSas7S3I0uffFdKUyrksqsvbh4NBtAYZKSAFqCVCOgfd
      FBUsTLqIBX20DrrYuHE9PZ0dc/aSufV9MQISzCSEqKULpzXBKS8TgSgKEYjT9IhnIHhVOMCN
      7C+cv4BCJmDC7SZddPl4Ywu2Wy0IhcJ7/v1oQSjEchHwTTIy6qe8vJBYTIjf76XcYiYqUJCe
      Nusr8E2MYbM7EEjkCOJhRkb9VG3cyGj/7FK/VqlAn2fE5XCToVGi0+nm7cNq7UOhUJBESCo2
      M2ff0dGJOj0TuVSMLk1KWChDJhIusLePDJNMpdBkFRAYHSQmkbMuN2suHOBG9rn5hWSo5IiU
      mQijU5eO1zKnfrdaaTp1hP87cgJpmoppzwTBOBx96wiV5cW0dVoxZBs4/sbveOfEaZKxECfO
      d1NWYKBnwI5aJsDhGiMFDAw70KmktLV3k2HIQrQC39uKvQOssXq5XCLpM/u38LtXTyOTptCp
      5ejkkFe9mz33beHIb3/BsCfJrqoczvTHkAcHyFDJiIjU1LX0kJ+ZxrRvgpLKajr6R/n7736X
      bPXyO1Hv7efXGncV8Xgcn9uFWD7rDTLnGGhr7yIFiMUS/GPDyDPMjNoGydCqsdonyExX8tjn
      v0JlYTbmkiqKLCWIg6M4xn0r0OMVSohZ42NCZIJX32nnic/svdM9WTRrA2CNW2Y5xXFXijWH
      9hq3zM0Ew92M7MlK8v/tudG/mOXpjAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard - Revenue Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='41' name='Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAApCAYAAABjlyZNAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAEkElEQVR4nO3cf0zUdRzH8afnodT4cbQUYlC3BDrzWJ7BpHI4/vDSsRSD/sLScK6sVmxZ
      a620mJVr2NAVrVSGFasJuGxz2dW4GUEq5FX442Iyzrr0nPLrIGLdefQHJ/JDc5rcF+7zfmz3
      B597c3vve7w+7+/nYEwbHBwcRAhF6bRuQAgtSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBK
      kwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMAiBBx4lhioGLJFrq0bmUEvdYN3Ij2
      Zw3Y95uw2A5hSdO6m/A1dJ2v8mRuJUUf5IW0n4kgE0AobUpOABFK4T1pw2YCBPpOcOrtfPZZ
      EqgwGqgwzuLT7AIcDR4CI+q6yrKoMGbhOOnh/GdPD9dXmh+k0d6hWf9Tm4/+b19nf3YylUYD
      Faa72fdiNb3+K9X6+bthO3VLh2orzfOxlTUwEOqWg8JmAvTsLOL7j50jVnz4fv8OR2EejNvB
      2vh1ZTqOAd/wSqDvBM5165nl2ENqdKi6Dg8DNYVUb7BxcXihk47addS6LlBQu56okcXt27AV
      +i5vSn0u3GV5HMDO8mJzyHfksJkAuruWYXnvAPkOD0Wuboqcx7AWmdHh5LcvDo+rn2l6gsxP
      DlLo7KbIeYSMjAjwt9DZqkHzk5oTh9UQnKqXH3vLgpuN30bTmzYu6s3M232M1a5u1hzZx7y5
      EQR+eoef68e83C0LmPth8Lqf+oOVm61E4qPz/VJOX3FiTKywCUDsyk1YHs0iNi5yaCEyiaRX
      XyAZ6D93dkz1HO55dyvp2fcxMxKITCN50RzgLP2e0PY95dVV09YLUWu3s3BxEtMB3ezFZL6x
      hlvx4raP2XwSckhbFrzu+mjiVlWRXRAD/jr+/DH07YfNLRB+D2d2vUzTTjtd53tH3feL/+O/
      D8E9rScJEEPiogWj1nULHyKeHbSP23zGimB2RgbU1OHz3pyOr0eYBKCD1ifT+eF4Dpkf1WOy
      GInQA3yJ3biGdq3bC2MBvx/w0vq4gRu9e/T3/3UzW7ouUzAAR7nwC0AsM2KCS549tNb7MBSX
      kJ5p1K41BcXdm46ONhJL27AWxFz7G8bpwG0/CpgwpN7s7q5t8p8BPIc54xy6pQn0uXCXPM9x
      N5CaQ2JCsMbbwz+A95saLgwA/l56m3bRmPcKpzVrXBEP5JCo9+F+bQVNB134ggfZQJ+Lc3s3
      YnvrwOh6v5eBroHhGnfJChrrfZBkJVmD3zVM/gngtXNo6cN0j1zTJ5Dy0jPEXfo6zUpy0hZa
      Tpbylal0uEw3O4EZoNlnzEqIfoyM58o5U+agZfV8WsY+nzv6bEB7OV9bykev6RNI2biB2yey
      z6uY/BMgJp6YS5/sEMlM83IyqxrIto4ctwu4v2oHKaZodIAuykjSU5+T37iFOzRoWS0R3FZs
      J3/bWuLvjB7+gZoel0r8qq08sin3cqnezLzNJRjN8cEz2tXez9CZJv8eXahs8k8AISaQBEAo
      TQIglCYBEEqTAAilSQCE0iQAQmkSAKG0a/4pRHNzcyj6EEIT/wJSuV2zE0iMEwAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='82' name='Profit' width='124'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Margin by Markets' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
      sqr5/wE8GmW7MRzeuQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='82' name='Quantity' width='192'>
      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
      v2Cy66TOhxoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='82' name='Revenue' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue by Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Qty by Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
    </thumbnail>
    <thumbnail height='171' name='Top 5 Customers by Revenue' width='192'>
      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
      hBqNOrkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='161' name='Top 5 Products by Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='41' name='Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
